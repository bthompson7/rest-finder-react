{"version":3,"sources":["logo.svg","components/map.js","utils/time_convert.js","components/restaurant_details.js","components/home.js","components/route.js","App.js","reportWebVitals.js","index.js"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","CreateAndDisplayMap","props","class","MapContainer","center","details","zoom","scrollWheelZoom","style","height","TileLayer","attribution","url","position","Popup","convert_military_time","military_time","converted_time","parsed_time","split","hours","Number","minutes","DisplayRestaurantDetails","useState","rest_details","updateRestDetails","dataLoaded","hasDataLoaded","showImagesToUser","shouldImagesBeShown","showImagesBtn","changeImagesButtonText","useEffect","fetch","match","params","id","method","headers","body","JSON","stringify","lat","lng","type","meal_type","then","response","json","document","title","open_time","close_time","is_open","onClick","photosArray","alt","src","displayImages","home","componentDidMount","bind","fetchDataFromYelp","state","rest_list","search_list","searchString","searchRegex","currentMealType","this","navigator","geolocation","console","log","getCurrentPosition","coords","latitude","longitude","setState","alert","length","i","currentRest","toLowerCase","includes","push","forceUpdate","meal","changeMealType","onChange","event","target","value","pattern","placeholder","search","map","rest","to","React","Component","Main","exact","path","component","Home","Restaurant","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.22afd4d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//using hooks\n\nimport React from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n\n//to make the marker icon show up\n//See: https://github.com/PaulLeCam/react-leaflet/issues/453\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\n\nfunction CreateAndDisplayMap(props) {\n\n  return (\n    <div class=\"map\">\n    <MapContainer center={[props.details['coordinates']['latitude'], props.details['coordinates']['longitude']]} zoom={17} scrollWheelZoom={false} style={{ height: \"100vh\"}}>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={[props.details['coordinates']['latitude'], props.details['coordinates']['longitude']]}>\n        <Popup>\n          {props.details['name']}\n        </Popup>\n      </Marker>\n    </MapContainer>\n    </div>\n    \n  );\n}\n\nexport default CreateAndDisplayMap;","/*\n\nSince the yelp API gives us the time in military time we need to convert to \"normal\" time\n\n*/\n\nexport function convert_military_time(military_time){\n    var converted_time = \"\";\n    var parsed_time = military_time.split(\"\");\n    var hours = Number(parsed_time[0] + parsed_time[1]);\n    var minutes = Number(parsed_time[2] + parsed_time[3]);\n\n    if (hours > 0 && hours <= 12) {\n        converted_time = \"\" + hours;\n    } else if (hours > 12) {\n        converted_time= \"\" + (hours - 12);\n    } else if (hours == 0) {\n        converted_time = \"12\";\n    }\n \n    converted_time += (minutes < 10) ? \":0\" + minutes : \":\" + minutes; \n    converted_time += (hours >= 12) ? \" P.M.\" : \" A.M.\";\n    \n    return converted_time\n};","\n//using hooks\n\nimport React, {useState, useEffect} from 'react';\nimport RestaurantMap from './map.js';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nimport { convert_military_time } from \"../utils/time_convert\";\n\n\nfunction DisplayRestaurantDetails(props) {\n    const [rest_details, updateRestDetails] = useState([]);\n    const [dataLoaded, hasDataLoaded] = useState(false);\n    const [showImagesToUser, shouldImagesBeShown] = useState(false);\n    const [showImagesBtn, changeImagesButtonText] = useState(\"Show Images\");\n\n   useEffect(() => {\n\n        fetch('/restaurant/' + props.match.params.id, {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({lat: null,lng: null, type:\"rest\", meal_type:\"lunch\"}),\n        }).then(response => response.json())\n        .then(function(response){\n            updateRestDetails(response)\n            hasDataLoaded(true)\n  \n            document.title = response['name'] + \" Details\";  \n\n        });\n\n    }, []);\n      \n    const displayImages = (photosArray) => {\n          \n        if(showImagesToUser){\n            return(\n                <div class=\"images-container\">\n                <img alt=\"\" src={photosArray[0]}></img>\n                <img alt=\"\" src={photosArray[1]}></img>\n                <img alt=\"\" src={photosArray[2]}></img>\n                </div>\n                ) \n        }\n          \n  }\n\n\n  const is_open = (close_time) =>{\n    if(rest_details['hours'][0]['is_open_now']){\n      return(\n        <div class=\"is-open\">\n          <h3>Open until {close_time}</h3>\n        </div>\n      )\n    }else{\n      return(\n        <div class=\"is-closed\">\n          <h3>This restaurant is currently closed</h3>\n        </div>\n      )\n    }\n\n  }\n\n  if(!dataLoaded){\n    return (\n        <div>\n        <h1>Loading Restaurant Information...</h1>\n        <div class=\"loader\"></div>\n        </div>\n\n    )\n}else{\n\n   var open_time = convert_military_time(rest_details['hours'][0]['open'][0]['start']);\n   var close_time = convert_military_time(rest_details['hours'][0]['open'][0]['end']);\n\n    return(\n        <div>\n        <ScrollUpButton />\n\n        <h1>{rest_details['name']}</h1>\n        <hr/>\n        {is_open(close_time)}\n        <h3>Phone: {rest_details['display_phone']}</h3>\n        <h3>{rest_details['rating']} / 5 based on {rest_details['review_count']} reviews</h3>\n        <h3>Price: {rest_details['price']}</h3>\n        <h3>Location: {rest_details['location']['display_address'][0]} {rest_details['location']['display_address'][1]} {rest_details['location']['display_address'][2]}</h3>\n        <h3>Hours: {open_time} until {close_time}</h3>\n\n        <button class=\"button\" onClick={() => {\n          \n\n      if(showImagesToUser){\n        shouldImagesBeShown(false)\n        changeImagesButtonText(\"Show Images\")\n      }else if(!showImagesToUser){\n        shouldImagesBeShown(true)\n        changeImagesButtonText(\"Hide Images\")\n      }\n\n        }}>{showImagesBtn}</button>\n\n        \n        {displayImages(rest_details['photos'])}\n\n        <RestaurantMap details={rest_details}/>\n        </div>\n        )\n}  \n\n}\n\nexport default DisplayRestaurantDetails;","import React from 'react';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nexport default class home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.fetchDataFromYelp = this.fetchDataFromYelp.bind(this);\n\n        this.state = {\n\n          rest_list:[],\n          search_list:[],\n          searchString:\"\",\n          searchRegex:\"[a-zA-Z[ ]*[0-9]*]+\",\n          lat:\"\",\n          lng:\"\",\n          dataLoaded:false,\n          currentMealType:\"\"\n \n        };\n    }\n\n    //get geolocation from user\n    componentDidMount(){\n      var lat = this.state.lat;\n      var lng = this.state.lng;\n\n\n      if(navigator.geolocation) {\n        console.log(\"navigator.geolocation is available\");\n        navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(\"current position acquired\");\n\n\n        if(lat !== position.coords.latitude && lng !== position.coords.longitude){\n        \n        this.setState({lat:position.coords.latitude})\n        this.setState({lng:position.coords.longitude})\n        console.log(position.coords.latitude + \" \" + position.coords.longitude);\n        this.fetchDataFromYelp();\n\n      }\n\n        }.bind(this));  \n     }else{\n       alert(\"Unable to get geolocation!\");\n     }\n    }\n\n\n\nsearch(){\n\n  if(this.state.search_list.length > 0){\n    this.state.search_list = [];\n  }\n\n  for(var i=0; i < this.state.rest_list.length; i++){\n\n    var currentRest = this.state.rest_list[i];\n\n    if(currentRest['name'].toLowerCase().includes(this.state.searchString.toLowerCase())){\n      this.state.search_list.push(currentRest);\n      console.log(this.state.search_list.length);\n    }else if(currentRest['location']['city'].toLowerCase().includes(this.state.searchString.toLowerCase())){\n      this.state.search_list.push(currentRest);\n      console.log(this.state.search_list.length);\n    }\n\n    //force the page to render with the new search results\n    this.forceUpdate();\n  }\n\n}\n\nfetchDataFromYelp(){\n\n    fetch('/getData', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({lat: this.state.lat,lng: this.state.lng, type:\"rest\", meal_type:\"lunch\"}),\n    }).then(response => response.json())\n    .then(function(response){\n        this.setState({rest_list : response});\n        this.setState({dataLoaded:true})\n        this.setState({currentMealType:\"lunch\"});\n    }.bind(this));\n\n}\n\nchangeMealType(meal){\n\n  if(this.state.search_list.length > 0){\n    this.setState({search_list:[]})\n  }\n  \n  this.setState({dataLoaded:false})\n\n  fetch('/getData', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({lat: this.state.lat,lng: this.state.lng, type:\"rest\", meal_type:meal}),\n  }).then(response => response.json())\n  .then(function(response){\n      this.setState({rest_list : response});\n      this.setState({dataLoaded:true});\n      this.setState({currentMealType:meal});\n\n  }.bind(this));\n}\n\n\n\nrender() {\n\n\nconst show_num_of_searches = () => {\n          \n  //no searches were found\n  if(this.state.search_list.length == 0){\n      return(\n        <h3>Currently displaying {this.state.rest_list.length} restaurants that serve {this.state.currentMealType}</h3>\n          ) \n\n  //oh, look some searches\n  }else{\n    return(\n      <h3>Currently displaying {this.state.search_list.length} restaurants that serve {this.state.currentMealType}</h3>\n    )\n  }\n    \n}\n\n\nconst show_restaurant_list = () => {\n          \n  //no searches were found\n  if(this.state.search_list.length == 0){\n      return(\n\n        this.state.rest_list.map(rest =>\n          (\n          <div class=\"box\">\n          <h3>{rest['name']}</h3>\n          <h3>{rest['location']['address1']} {rest['location']['address2']} {rest['location']['address3']} {rest['location']['city']},{rest['location']['state']}</h3>\n          <h3>{rest['rating']} / 5 based on {rest['review_count']} reviews</h3>\n\n          <BrowserRouter>\n              <Link target=\"_blank\" to={\"/details/\" + rest['id']}>View More Details</Link>\n           </BrowserRouter>\n\n           </div>))\n  \n          \n          ) \n\n  //oh, look some searches\n  }else{\n    return(\n      this.state.search_list.map(rest =>\n        (\n        <div class=\"box\">\n        <h3>{rest['name']}</h3>\n        <h3>{rest['location']['address1']} {rest['location']['address2']} {rest['location']['address3']} {rest['location']['city']},{rest['location']['state']}</h3>\n        <h3>{rest['rating']} / 5 based on {rest['review_count']} reviews</h3>\n\n        <BrowserRouter>\n            <Link target=\"_blank\" to={\"/details/\" + rest['id']}>View More Details</Link>\n         </BrowserRouter>\n\n         </div>))  \n    )\n  }\n    \n}\n\n      if(!this.state.dataLoaded){\n        return (\n          <div>\n          <h1>Finding Nearby Restaurants...</h1>\n          <div class=\"loader\"></div>\n          </div>\n        )\n\n      }else{\n        return(\n  \n          <div class=\"main\">        \n          <ScrollUpButton />\n\n           <div class=\"page-header\">\n          <h1>Restaurant Finder</h1>\n          <hr/>\n\n\n          <button class=\"button\" onClick={() => { this.changeMealType('breakfast') }}>Breakfast</button>\n          <button class=\"button\" onClick={() => { this.changeMealType('lunch')}}>Lunch</button>\n          <button class=\"button\" onClick={() => { this.changeMealType('dinner') }}>Dinner</button>\n\n          {show_num_of_searches()}\n\n          <input class=\"search-element\" onChange={event => this.setState({searchString:event.target.value})} pattern={this.state.searchRegex} id=\"searchInputElement\" placeholder=\"Search\"></input>\n          <button class=\"button\" onClick={() => { this.search()}}>Search</button>\n\n          </div>\n\n           {show_restaurant_list()}\n          </div>\n        )\n      }\n      \n    }\n\n  }","\nimport React from 'react'\nimport { Switch, Route,Router,BrowserRouter } from 'react-router-dom'\nimport Restaurant from './restaurant_details.js';\nimport Home from './home';\n \nconst Main = () => (\n<main>\n <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/details/:id\" component={Restaurant}/>\n      </Switch>\n  </BrowserRouter> \n  </main>\n)\n\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport HomeRoute from './components/route';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <HomeRoute></HomeRoute>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}