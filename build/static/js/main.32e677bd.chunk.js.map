{"version":3,"sources":["logo.svg","components/map.js","components/restaurant_details.js","components/home.js","components/route.js","App.js","reportWebVitals.js","index.js"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","ShowMap","props","state","dataLoaded","lat","lng","class","MapContainer","center","this","details","zoom","scrollWheelZoom","style","height","TileLayer","attribution","url","position","Popup","React","Component","Restaurant","rest_details","showImages","showImagesButton","showPhotos","bind","console","log","fetch","match","params","id","method","headers","body","JSON","stringify","type","meal_type","then","response","json","setState","document","title","onClick","photosArray","src","displayImages","home","componentDidMount","fetchDataFromYelp","rest_list","currentMealType","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","alert","meal","changeMealType","length","map","rest","target","to","Main","exact","path","component","Home","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+OAAe,I,mICWXA,EAAcC,IAAEC,KAAK,CACrBC,QAASD,IACTE,UAAWC,MAGfJ,IAAEK,OAAOC,UAAUC,QAAQN,KAAOF,E,IAEbS,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEFC,MAAQ,CACTC,YAAa,EACbC,IAAI,KACJC,IAAI,MANQ,E,qDAcf,OACR,qBAAKC,MAAM,MAAX,SACA,eAACC,EAAA,EAAD,CAAcC,OAAQ,CAACC,KAAKR,MAAMS,QAAX,qBAA+CD,KAAKR,MAAMS,QAAX,uBAAiDC,KAAM,GAAIC,iBAAiB,EAAOC,MAAO,CAAEC,OAAQ,SAA1K,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACpB,EAAA,EAAD,CAAQqB,SAAU,CAACT,KAAKR,MAAMS,QAAX,qBAA+CD,KAAKR,MAAMS,QAAX,uBAAlE,SACE,cAACS,EAAA,EAAD,UACGV,KAAKR,MAAMS,QAAX,kB,GAxB8BU,IAAMC,W,iBCbtBC,E,kDACjB,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IAEFC,MAAQ,CACTqB,aAAa,GACbpB,YAAa,EACbqB,YAAY,EACZC,iBAAiB,eAIrB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAXF,E,gEAoBnBC,QAAQC,IAAI,+BAGZC,MAAM,eAAiBrB,KAAKR,MAAM8B,MAAMC,OAAOC,GAAI,CAC/CC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAAClC,IAAKK,KAAKP,MAAME,IAAIC,IAAKI,KAAKP,MAAMG,IAAKkC,KAAK,OAAQC,UAAU,YACrFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,KAAK,SAASC,GAEXjC,KAAKmC,SAAS,CAACrB,aAAemB,IAC9Bd,QAAQC,IAAIpB,KAAKP,MAAMqB,cACvBsB,SAASC,MAAQrC,KAAKP,MAAMqB,aAAX,KAAkC,WACnDd,KAAKmC,SAAS,CAACzC,YAAW,KAE5BwB,KAAKlB,S,mCAMDA,KAAKP,MAAMsB,WAGNf,KAAKP,MAAMsB,aAChBf,KAAKmC,SAAS,CAACpB,YAAW,IAC1Bf,KAAKmC,SAAS,CAACnB,iBAAiB,kBAJhChB,KAAKmC,SAAS,CAACpB,YAAW,IAC1Bf,KAAKmC,SAAS,CAACnB,iBAAiB,mB,+BAU9B,IAAD,OAmBL,OAAIhB,KAAKP,MAAMC,WAUP,gCACA,cAAC,IAAD,IAEA,6BAAKM,KAAKP,MAAMqB,aAAX,OACL,uBACA,yCAAYd,KAAKP,MAAMqB,aAAX,iBACZ,+BAAKd,KAAKP,MAAMqB,aAAX,OAAL,iBAAsDd,KAAKP,MAAMqB,aAAX,aAAtD,cACA,yCAAYd,KAAKP,MAAMqB,aAAX,SACZ,4CAAed,KAAKP,MAAMqB,aAAX,yBAAuD,GAAtE,IAA2Ed,KAAKP,MAAMqB,aAAX,yBAAuD,MAClI,yCAAYd,KAAKP,MAAMqB,aAAX,MAAiC,GAAjC,KAA4C,GAA5C,MAAZ,UAA4Ed,KAAKP,MAAMqB,aAAX,MAAiC,GAAjC,KAA4C,GAA5C,OAC5E,wBAAQjB,MAAM,SAASyC,QAAS,WAAQ,EAAKrB,cAA7C,SAA8DjB,KAAKP,MAAMuB,mBAlC3D,SAACuB,GAEnB,GAAG,EAAK9C,MAAMsB,WACV,OACI,sBAAKlB,MAAM,mBAAX,UACA,qBAAK2C,IAAKD,EAAY,KACtB,qBAAKC,IAAKD,EAAY,KACtB,qBAAKC,IAAKD,EAAY,QA8BzBE,CAAczC,KAAKP,MAAMqB,aAAX,QAEf,cAAC,EAAD,CAAeb,QAASD,KAAKP,MAAMqB,kBAvBnC,gCACA,mEACA,qBAAKjB,MAAM,kB,GA7Eac,IAAMC,WCDzB8B,E,kDACjB,WAAYlD,GAAQ,IAAD,8BACf,cAAMA,IAEDmD,kBAAoB,EAAKA,kBAAkBzB,KAAvB,gBACzB,EAAK0B,kBAAoB,EAAKA,kBAAkB1B,KAAvB,gBAEzB,EAAKzB,MAAQ,CAEXoD,UAAU,GACVlD,IAAI,GACJC,IAAI,GACJF,YAAW,EACXoD,gBAAgB,IAZH,E,gEAmBjB,IAAInD,EAAMK,KAAKP,MAAME,IACjBC,EAAMI,KAAKP,MAAMG,IAGlBmD,UAAUC,aACX7B,QAAQC,IAAI,sCACZ2B,UAAUC,YAAYC,mBAAmB,SAASxC,GAClDU,QAAQC,IAAI,6BAGTzB,IAAQc,EAASyC,OAAOC,UAAYvD,IAAQa,EAASyC,OAAOE,YAE/DpD,KAAKmC,SAAS,CAACxC,IAAIc,EAASyC,OAAOC,WACnCnD,KAAKmC,SAAS,CAACvC,IAAIa,EAASyC,OAAOE,YACnCjC,QAAQC,IAAIX,EAASyC,OAAOC,SAAW,IAAM1C,EAASyC,OAAOE,WAC7DpD,KAAK4C,sBAIH1B,KAAKlB,QAERqD,MAAM,gC,0CASThC,MAAM,WAAY,CAChBI,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAAClC,IAAKK,KAAKP,MAAME,IAAIC,IAAKI,KAAKP,MAAMG,IAAKkC,KAAK,OAAQC,UAAU,YACrFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,KAAK,SAASC,GACXjC,KAAKmC,SAAS,CAACU,UAAYZ,IAC3BjC,KAAKmC,SAAS,CAACzC,YAAW,IAC1BM,KAAKmC,SAAS,CAACW,gBAAgB,WAGjC5B,KAAKlB,S,qCAOIsD,GACbtD,KAAKmC,SAAS,CAACzC,YAAW,IAE1B2B,MAAM,WAAY,CAChBI,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAAClC,IAAKK,KAAKP,MAAME,IAAIC,IAAKI,KAAKP,MAAMG,IAAKkC,KAAK,OAAQC,UAAUuB,MACrFtB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,KAAK,SAASC,GACXjC,KAAKmC,SAAS,CAACU,UAAYZ,IAC3BjC,KAAKmC,SAAS,CAACzC,YAAW,IAC1BM,KAAKmC,SAAS,CAACW,gBAAgBQ,KAEjCpC,KAAKlB,S,+BAGC,IAAD,OAGH,OAAIA,KAAKP,MAAMC,WAWX,sBAAKG,MAAM,OAAX,UACA,cAAC,IAAD,IAEC,sBAAKA,MAAM,cAAX,UACD,mDACA,uBAGA,wBAAQA,MAAM,SAASyC,QAAS,WAAQ,EAAKiB,eAAe,cAA5D,uBACA,wBAAQ1D,MAAM,SAASyC,QAAS,WAAQ,EAAKiB,eAAe,UAA5D,mBACA,wBAAQ1D,MAAM,SAASyC,QAAS,WAAQ,EAAKiB,eAAe,WAA5D,oBACA,uDAA0BvD,KAAKP,MAAMoD,UAAUW,OAA/C,2BAA+ExD,KAAKP,MAAMqD,sBAIzF9C,KAAKP,MAAMoD,UAAUY,KAAI,SAAAC,GAAI,OAEtB,sBAAK7D,MAAM,kBAAX,UACA,6BAAK6D,EAAI,OACT,+BAAKA,EAAI,SAAJ,SAAL,IAAoCA,EAAI,SAAJ,KAApC,IAA+DA,EAAI,SAAJ,SAE/D,cAAC,IAAD,UACI,cAAC,IAAD,CAAMC,OAAO,SAASC,GAAI,YAAcF,EAAI,GAA5C,qCA/BZ,gCACA,+DACA,qBAAK7D,MAAM,kB,GA3Fac,IAAMC,WCazBiD,EAXF,kBACb,+BACC,cAAC,IAAD,UACK,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOF,KAAK,eAAeC,UAAWnD,YCU/BqD,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACA,cAAC,EAAD,SCHSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAAS2C,eAAe,SAM1BX,M","file":"static/js/main.32e677bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component, useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n\n//to make the marker icon show up\n//See: https://github.com/PaulLeCam/react-leaflet/issues/453\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nexport default class ShowMap extends React.Component {\n    constructor(props) {\n        super(props);\n\n       this.state = {\n           dataLoaded : false,\n           lat:null,\n           lng:null\n       };\n    }\n\n\n    render() {\n     \n        \n        return(\n<div class=\"map\">\n<MapContainer center={[this.props.details['coordinates']['latitude'], this.props.details['coordinates']['longitude']]} zoom={17} scrollWheelZoom={false} style={{ height: \"100vh\"}}>\n  <TileLayer\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n  <Marker position={[this.props.details['coordinates']['latitude'], this.props.details['coordinates']['longitude']]}>\n    <Popup>\n      {this.props.details['name']}\n    </Popup>\n  </Marker>\n</MapContainer>\n</div>\n\n\n        )\n        }       \n}\n\n","import React from 'react';\nimport RestaurantMap from './map.js';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\n\nexport default class Restaurant extends React.Component {\n    constructor(props) {\n        super(props);\n\n       this.state = {\n           rest_details:{},\n           dataLoaded : false,\n           showImages: false,\n           showImagesButton:\"Show Images\"\n       };\n\n       \n       this.showPhotos = this.showPhotos.bind(this);\n\n\n    }\n\n\n\n    componentDidMount(){\n\n    console.log(\"Fetching restaurant details\");\n\n\n    fetch('/restaurant/' + this.props.match.params.id, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({lat: this.state.lat,lng: this.state.lng, type:\"rest\", meal_type:\"lunch\"}),\n      }).then(response => response.json())\n      .then(function(response){\n\n          this.setState({rest_details : response});\n          console.log(this.state.rest_details);\n          document.title = this.state.rest_details['name'] + \" Details\";  \n          this.setState({dataLoaded:true})\n\n      }.bind(this));\n    }\n\n\n    showPhotos(){\n\n        if(!this.state.showImages){\n            this.setState({showImages:true})\n            this.setState({showImagesButton:\"Hide Images\"})\n        }else if(this.state.showImages){\n            this.setState({showImages:false})\n            this.setState({showImagesButton:\"Show Images\"})\n\n\n        }\n\n    }\n\n    render() {\n\n\n\n            \n        const displayImages = (photosArray) => {\n          \n            if(this.state.showImages){\n                return(\n                    <div class=\"images-container\">\n                    <img src={photosArray[0]}></img>\n                    <img src={photosArray[1]}></img>\n                    <img src={photosArray[2]}></img>\n                    </div>\n                    ) \n            }\n              \n      }\n        \n        if(!this.state.dataLoaded){\n            return (\n                <div>\n                <h1>Loading Restaurant Information...</h1>\n                <div class=\"loader\"></div>\n                </div>\n\n            )\n        }else{\n            return(\n                <div>\n                <ScrollUpButton />\n\n                <h1>{this.state.rest_details['name']}</h1>\n                <hr/>\n                <h3>Phone: {this.state.rest_details['display_phone']}</h3>\n                <h3>{this.state.rest_details['rating']} / 5 based on {this.state.rest_details['review_count']} reviews</h3>\n                <h3>Price: {this.state.rest_details['price']}</h3>\n                <h3>Location: {this.state.rest_details['location']['display_address'][0]} {this.state.rest_details['location']['display_address'][1]}</h3>\n                <h3>Hours: {this.state.rest_details['hours'][0]['open'][0]['start']} until {this.state.rest_details['hours'][0]['open'][0]['end']}</h3>\n                <button class=\"button\" onClick={() => { this.showPhotos() }}>{this.state.showImagesButton}</button>\n\n                \n                {displayImages(this.state.rest_details['photos'])}\n\n                <RestaurantMap details={this.state.rest_details}/>\n                </div>\n                )\n        }    \n        }\n}\n\n","import React from 'react';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nexport default class home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.fetchDataFromYelp = this.fetchDataFromYelp.bind(this);\n\n        this.state = {\n\n          rest_list:[],\n          lat:\"\",\n          lng:\"\",\n          dataLoaded:false,\n          currentMealType:\"\"\n \n        };\n    }\n\n    //get geolocation from user\n    componentDidMount(){\n      var lat = this.state.lat;\n      var lng = this.state.lng;\n\n\n      if(navigator.geolocation) {\n        console.log(\"navigator.geolocation is available\");\n        navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(\"current position acquired\");\n\n\n        if(lat !== position.coords.latitude && lng !== position.coords.longitude){\n        \n        this.setState({lat:position.coords.latitude})\n        this.setState({lng:position.coords.longitude})\n        console.log(position.coords.latitude + \" \" + position.coords.longitude);\n        this.fetchDataFromYelp();\n\n      }\n\n        }.bind(this));  \n     }else{\n       alert(\"Unable to get geolocation!\");\n     }\n    }\n\n\n\n\nfetchDataFromYelp(){\n\n    fetch('/getData', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({lat: this.state.lat,lng: this.state.lng, type:\"rest\", meal_type:\"lunch\"}),\n    }).then(response => response.json())\n    .then(function(response){\n        this.setState({rest_list : response});\n        this.setState({dataLoaded:true})\n        this.setState({currentMealType:\"lunch\"});\n\n\n    }.bind(this));\n\n}\n\n\n\n\nchangeMealType(meal){\n  this.setState({dataLoaded:false})\n\n  fetch('/getData', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({lat: this.state.lat,lng: this.state.lng, type:\"rest\", meal_type:meal}),\n  }).then(response => response.json())\n  .then(function(response){\n      this.setState({rest_list : response});\n      this.setState({dataLoaded:true});\n      this.setState({currentMealType:meal});\n\n  }.bind(this));\n}\n\nrender() {\n\n  \n      if(!this.state.dataLoaded){\n        return (\n          <div>\n          <h1>Finding Nearby Restaurants...</h1>\n          <div class=\"loader\"></div>\n\n          </div>\n        )\n      }else{\n        return(\n  \n          <div class=\"main\">        \n          <ScrollUpButton />\n\n           <div class=\"page-header\">\n          <h1>Restaurant Finder</h1>\n          <hr/>\n\n\n          <button class=\"button\" onClick={() => { this.changeMealType('breakfast') }}>Breakfast</button>\n          <button class=\"button\" onClick={() => { this.changeMealType('lunch')}}>Lunch</button>\n          <button class=\"button\" onClick={() => { this.changeMealType('dinner') }}>Dinner</button>\n          <h3>Currently displaying {this.state.rest_list.length} restaurants that serve {this.state.currentMealType}</h3>\n\n          </div>\n\n          {this.state.rest_list.map(rest =>\n                  (\n                  <div class=\"restaurant-list\">\n                  <h3>{rest['name']}</h3>\n                  <h3>{rest['location']['address1']} {rest['location']['city']},{rest['location']['state']}</h3>\n\n                  <BrowserRouter>\n                      <Link target=\"_blank\" to={\"/details/\" + rest['id']}>View Details</Link>\n                   </BrowserRouter>\n  \n                   </div>))\n          \n                   }  \n          </div>\n        )\n      }\n      \n    }\n\n  }","\nimport React from 'react'\nimport { Switch, Route,Router,BrowserRouter } from 'react-router-dom'\nimport Restaurant from './restaurant_details';\nimport Home from './home';\n \nconst Main = () => (\n<main>\n <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/details/:id\" component={Restaurant}/>\n      </Switch>\n  </BrowserRouter> \n  </main>\n)\n\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport HomeRoute from './components/route';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <HomeRoute></HomeRoute>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}