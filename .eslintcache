[{"/home/ben/restaurant-finder-react/src/index.js":"1","/home/ben/restaurant-finder-react/src/App.js":"2","/home/ben/restaurant-finder-react/src/reportWebVitals.js":"3","/home/ben/restaurant-finder-react/src/components/home.js":"4","/home/ben/restaurant-finder-react/src/components/route.js":"5","/home/ben/restaurant-finder-react/src/components/restaurant_details.js":"6","/home/ben/restaurant-finder-react/src/components/map.js":"7","/home/ben/restaurant-finder-react/src/utils/time_convert.js":"8"},{"size":500,"mtime":1610411704077,"results":"9","hashOfConfig":"10"},{"size":333,"mtime":1610482365453,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610411704077,"results":"12","hashOfConfig":"10"},{"size":5961,"mtime":1611596032146,"results":"13","hashOfConfig":"10"},{"size":414,"mtime":1610743388506,"results":"14","hashOfConfig":"10"},{"size":3170,"mtime":1611596024386,"results":"15","hashOfConfig":"10"},{"size":1223,"mtime":1610747513726,"results":"16","hashOfConfig":"10"},{"size":721,"mtime":1610997179896,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"xi460z",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/home/ben/restaurant-finder-react/src/index.js",[],["40","41"],"/home/ben/restaurant-finder-react/src/App.js",["42","43","44"],"import logo from './logo.svg';\nimport './App.css';\nimport HomeRoute from './components/route';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <HomeRoute></HomeRoute>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ben/restaurant-finder-react/src/reportWebVitals.js",[],"/home/ben/restaurant-finder-react/src/components/home.js",["45","46","47"],"import React from 'react';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nexport default class home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.fetchDataFromYelp = this.fetchDataFromYelp.bind(this);\n\n        this.state = {\n\n          rest_list:[],\n          search_list:[],\n          searchString:\"\",\n          searchRegex:\"[a-zA-Z[ ]*[0-9]*]+\",\n          lat:\"\",\n          lng:\"\",\n          dataLoaded:false,\n          currentMealType:\"\"\n \n        };\n    }\n\n    //get geolocation from user\n    componentDidMount(){\n      var lat = this.state.lat;\n      var lng = this.state.lng;\n\n\n      if(navigator.geolocation) {\n        console.log(\"navigator.geolocation is available\");\n        navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(\"current position acquired\");\n\n\n        if(lat !== position.coords.latitude && lng !== position.coords.longitude){\n        \n        this.setState({lat:position.coords.latitude})\n        this.setState({lng:position.coords.longitude})\n        console.log(position.coords.latitude + \" \" + position.coords.longitude);\n        this.fetchDataFromYelp();\n\n      }\n\n        }.bind(this));  \n     }else{\n       alert(\"Unable to get geolocation!\");\n     }\n    }\n\n\n\nsearch(){\n\n  if(this.state.search_list.length > 0){\n    this.state.search_list = [];\n  }\n\n  for(var i=0; i < this.state.rest_list.length; i++){\n\n    var currentRest = this.state.rest_list[i];\n\n    if(currentRest['name'].toLowerCase().includes(this.state.searchString.toLowerCase())){\n      this.state.search_list.push(currentRest);\n      console.log(this.state.search_list.length);\n    }else if(currentRest['location']['city'].toLowerCase().includes(this.state.searchString.toLowerCase())){\n      this.state.search_list.push(currentRest);\n      console.log(this.state.search_list.length);\n    }\n\n    //force the page to render with the new search results\n    this.forceUpdate();\n  }\n\n}\n\nfetchDataFromYelp(){\n\n    fetch('http://localhost:3001/getData', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({lat: this.state.lat,lng: this.state.lng, type:\"rest\", meal_type:\"lunch\"}),\n    }).then(response => response.json())\n    .then(function(response){\n        this.setState({rest_list : response});\n        this.setState({dataLoaded:true})\n        this.setState({currentMealType:\"lunch\"});\n    }.bind(this));\n\n}\n\nchangeMealType(meal){\n\n  if(this.state.search_list.length > 0){\n    this.setState({search_list:[]})\n  }\n  \n  this.setState({dataLoaded:false})\n\n  fetch('http://localhost:3001/getData', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({lat: this.state.lat,lng: this.state.lng, type:\"rest\", meal_type:meal}),\n  }).then(response => response.json())\n  .then(function(response){\n      this.setState({rest_list : response});\n      this.setState({dataLoaded:true});\n      this.setState({currentMealType:meal});\n\n  }.bind(this));\n}\n\n\n\nrender() {\n\n\nconst show_num_of_searches = () => {\n          \n  //no searches were found\n  if(this.state.search_list.length == 0){\n      return(\n        <h3>Currently displaying {this.state.rest_list.length} restaurants that serve {this.state.currentMealType}</h3>\n          ) \n\n  //oh, look some searches\n  }else{\n    return(\n      <h3>Currently displaying {this.state.search_list.length} restaurants that serve {this.state.currentMealType}</h3>\n    )\n  }\n    \n}\n\n\nconst show_restaurant_list = () => {\n          \n  //no searches were found\n  if(this.state.search_list.length == 0){\n      return(\n\n        this.state.rest_list.map(rest =>\n          (\n          <div class=\"box\">\n          <h3>{rest['name']}</h3>\n          <h3>{rest['location']['address1']} {rest['location']['address2']} {rest['location']['address3']} {rest['location']['city']},{rest['location']['state']}</h3>\n          <h3>{rest['rating']} / 5 based on {rest['review_count']} reviews</h3>\n\n          <BrowserRouter>\n              <Link target=\"_blank\" to={\"/details/\" + rest['id']}>View More Details</Link>\n           </BrowserRouter>\n\n           </div>))\n  \n          \n          ) \n\n  //oh, look some searches\n  }else{\n    return(\n      this.state.search_list.map(rest =>\n        (\n        <div class=\"box\">\n        <h3>{rest['name']}</h3>\n        <h3>{rest['location']['address1']} {rest['location']['address2']} {rest['location']['address3']} {rest['location']['city']},{rest['location']['state']}</h3>\n        <h3>{rest['rating']} / 5 based on {rest['review_count']} reviews</h3>\n\n        <BrowserRouter>\n            <Link target=\"_blank\" to={\"/details/\" + rest['id']}>View More Details</Link>\n         </BrowserRouter>\n\n         </div>))  \n    )\n  }\n    \n}\n\n      if(!this.state.dataLoaded){\n        return (\n          <div>\n          <h1>Finding Nearby Restaurants...</h1>\n          <div class=\"loader\"></div>\n          </div>\n        )\n\n      }else{\n        return(\n  \n          <div class=\"main\">        \n          <ScrollUpButton />\n\n           <div class=\"page-header\">\n          <h1>Restaurant Finder</h1>\n          <hr/>\n\n\n          <button class=\"button\" onClick={() => { this.changeMealType('breakfast') }}>Breakfast</button>\n          <button class=\"button\" onClick={() => { this.changeMealType('lunch')}}>Lunch</button>\n          <button class=\"button\" onClick={() => { this.changeMealType('dinner') }}>Dinner</button>\n\n          {show_num_of_searches()}\n\n          <input class=\"search-element\" onChange={event => this.setState({searchString:event.target.value})} pattern={this.state.searchRegex} id=\"searchInputElement\" placeholder=\"Search\"></input>\n          <button class=\"button\" onClick={() => { this.search()}}>Search</button>\n\n          </div>\n\n           {show_restaurant_list()}\n          </div>\n        )\n      }\n      \n    }\n\n  }","/home/ben/restaurant-finder-react/src/components/route.js",["48"],"\nimport React from 'react'\nimport { Switch, Route,Router,BrowserRouter } from 'react-router-dom'\nimport Restaurant from './restaurant_details.js';\nimport Home from './home';\n \nconst Main = () => (\n<main>\n <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/details/:id\" component={Restaurant}/>\n      </Switch>\n  </BrowserRouter> \n  </main>\n)\n\nexport default Main;","/home/ben/restaurant-finder-react/src/components/restaurant_details.js",["49"],"\n//using hooks\n\nimport React, {useState, useEffect} from 'react';\nimport RestaurantMap from './map.js';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nimport { convert_military_time } from \"../utils/time_convert\";\n\n\nfunction DisplayRestaurantDetails(props) {\n    const [rest_details, setRest_details] = useState([]);\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const [showImagesToUser, setShowImagesToUser] = useState(false);\n    const [showImagesBtn, setShowImagesBtn] = useState(\"Show Images\");\n\n   useEffect(() => {\n\n        fetch('http://localhost:3001/restaurant/' + props.match.params.id, {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({lat: null,lng: null, type:\"rest\", meal_type:\"lunch\"}),\n        }).then(response => response.json())\n        .then(function(response){\n            setRest_details(response)\n            setDataLoaded(true)\n  \n            document.title = response['name'] + \" Details\";  \n\n        });\n\n    }, []);\n      \n    const displayImages = (photosArray) => {\n          \n        if(showImagesToUser){\n            return(\n                <div class=\"images-container\">\n                <img alt=\"\" src={photosArray[0]}></img>\n                <img alt=\"\" src={photosArray[1]}></img>\n                <img alt=\"\" src={photosArray[2]}></img>\n                </div>\n                ) \n        }\n          \n  }\n\n\n  const is_open = (close_time) =>{\n    if(rest_details['hours'][0]['is_open_now']){\n      return(\n        <div class=\"is-open\">\n          <h3>Open until {close_time}</h3>\n        </div>\n      )\n    }else{\n      return(\n        <div class=\"is-closed\">\n          <h3>This restaurant is currently closed</h3>\n        </div>\n      )\n    }\n\n  }\n\n  if(!dataLoaded){\n    return (\n        <div>\n        <h1>Loading Restaurant Information...</h1>\n        <div class=\"loader\"></div>\n        </div>\n\n    )\n}else{\n\n   var open_time = convert_military_time(rest_details['hours'][0]['open'][0]['start']);\n   var close_time = convert_military_time(rest_details['hours'][0]['open'][0]['end']);\n\n    return(\n        <div>\n        <ScrollUpButton />\n\n        <h1>{rest_details['name']}</h1>\n        <hr/>\n        {is_open(close_time)}\n        <h3>Phone: {rest_details['display_phone']}</h3>\n        <h3>{rest_details['rating']} / 5 based on {rest_details['review_count']} reviews</h3>\n        <h3>Price: {rest_details['price']}</h3>\n        <h3>Location: {rest_details['location']['display_address'][0]} {rest_details['location']['display_address'][1]} {rest_details['location']['display_address'][2]}</h3>\n        <h3>Hours: {open_time} until {close_time}</h3>\n\n        <button class=\"button\" onClick={() => {\n          \n\n      if(showImagesToUser){\n        setShowImagesToUser(false)\n        setShowImagesBtn(\"Show Images\")\n      }else if(!showImagesToUser){\n        setShowImagesToUser(true)\n        setShowImagesBtn(\"Hide Images\")\n      }\n\n        }}>{showImagesBtn}</button>\n\n        \n        {displayImages(rest_details['photos'])}\n\n        <RestaurantMap details={rest_details}/>\n        </div>\n        )\n}  \n\n}\n\nexport default DisplayRestaurantDetails;","/home/ben/restaurant-finder-react/src/components/map.js",[],"/home/ben/restaurant-finder-react/src/utils/time_convert.js",["50"],"/*\n\nSince the yelp API gives us the time in military time we need to convert to \"normal\" time\n\n*/\n\nexport function convert_military_time(military_time){\n    var converted_time = \"\";\n    var parsed_time = military_time.split(\"\");\n    var hours = Number(parsed_time[0] + parsed_time[1]);\n    var minutes = Number(parsed_time[2] + parsed_time[3]);\n\n    if (hours > 0 && hours <= 12) {\n        converted_time = \"\" + hours;\n    } else if (hours > 12) {\n        converted_time= \"\" + (hours - 12);\n    } else if (hours == 0) {\n        converted_time = \"12\";\n    }\n \n    converted_time += (minutes < 10) ? \":0\" + minutes : \":\" + minutes; \n    converted_time += (hours >= 12) ? \" P.M.\" : \" A.M.\";\n    \n    return converted_time\n};",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":7,"column":3,"nodeType":"57","messageId":"58","endLine":7,"endColumn":9},{"ruleId":"55","severity":1,"message":"60","line":8,"column":3,"nodeType":"57","messageId":"58","endLine":8,"endColumn":8},{"ruleId":"61","severity":1,"message":"62","line":58,"column":5,"nodeType":"63","endLine":58,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":123,"column":36,"nodeType":"66","messageId":"67","endLine":123,"endColumn":38},{"ruleId":"64","severity":1,"message":"65","line":141,"column":36,"nodeType":"66","messageId":"67","endLine":141,"endColumn":38},{"ruleId":"55","severity":1,"message":"68","line":3,"column":24,"nodeType":"57","messageId":"58","endLine":3,"endColumn":30},{"ruleId":"69","severity":1,"message":"70","line":32,"column":8,"nodeType":"71","endLine":32,"endColumn":10,"suggestions":"72"},{"ruleId":"64","severity":1,"message":"65","line":17,"column":22,"nodeType":"66","messageId":"67","endLine":17,"endColumn":24},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [props.match.params.id]",{"range":"78","text":"79"},[1026,1028],"[props.match.params.id]"]